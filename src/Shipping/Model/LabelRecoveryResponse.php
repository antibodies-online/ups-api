<?php
/**
 * LabelRecoveryResponse
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  AntibodiesOnline\UpsApi\Shipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ship
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace AntibodiesOnline\UpsApi\Shipping\Model;

use \ArrayAccess;
use \AntibodiesOnline\UpsApi\Shipping\ObjectSerializer;

/**
 * LabelRecoveryResponse Class Doc Comment
 *
 * @category Class
 * @description Response for the Label recovery request  Validates the date range and label being present. Also if the shipment is return or not
 * @package  AntibodiesOnline\UpsApi\Shipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class LabelRecoveryResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'LabelRecoveryResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'response' => '\AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseResponse',
        'shipment_identification_number' => 'string',
        'label_results' => '\AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseLabelResults1',
        'cod_turn_in_page' => '\AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseCODTurnInPage',
        'form' => '\AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseForm',
        'high_value_report' => '\AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseHighValueReport',
        'tracking_candidate' => '\AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseTrackingCandidate1'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'response' => null,
        'shipment_identification_number' => null,
        'label_results' => null,
        'cod_turn_in_page' => null,
        'form' => null,
        'high_value_report' => null,
        'tracking_candidate' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'response' => false,
		'shipment_identification_number' => false,
		'label_results' => false,
		'cod_turn_in_page' => false,
		'form' => false,
		'high_value_report' => false,
		'tracking_candidate' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'response' => 'Response',
        'shipment_identification_number' => 'ShipmentIdentificationNumber',
        'label_results' => 'LabelResults',
        'cod_turn_in_page' => 'CODTurnInPage',
        'form' => 'Form',
        'high_value_report' => 'HighValueReport',
        'tracking_candidate' => 'TrackingCandidate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'response' => 'setResponse',
        'shipment_identification_number' => 'setShipmentIdentificationNumber',
        'label_results' => 'setLabelResults',
        'cod_turn_in_page' => 'setCodTurnInPage',
        'form' => 'setForm',
        'high_value_report' => 'setHighValueReport',
        'tracking_candidate' => 'setTrackingCandidate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'response' => 'getResponse',
        'shipment_identification_number' => 'getShipmentIdentificationNumber',
        'label_results' => 'getLabelResults',
        'cod_turn_in_page' => 'getCodTurnInPage',
        'form' => 'getForm',
        'high_value_report' => 'getHighValueReport',
        'tracking_candidate' => 'getTrackingCandidate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('response', $data ?? [], null);
        $this->setIfExists('shipment_identification_number', $data ?? [], null);
        $this->setIfExists('label_results', $data ?? [], null);
        $this->setIfExists('cod_turn_in_page', $data ?? [], null);
        $this->setIfExists('form', $data ?? [], null);
        $this->setIfExists('high_value_report', $data ?? [], null);
        $this->setIfExists('tracking_candidate', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['response'] === null) {
            $invalidProperties[] = "'response' can't be null";
        }
        if (!is_null($this->container['shipment_identification_number']) && (mb_strlen($this->container['shipment_identification_number']) > 18)) {
            $invalidProperties[] = "invalid value for 'shipment_identification_number', the character length must be smaller than or equal to 18.";
        }

        if (!is_null($this->container['shipment_identification_number']) && (mb_strlen($this->container['shipment_identification_number']) < 18)) {
            $invalidProperties[] = "invalid value for 'shipment_identification_number', the character length must be bigger than or equal to 18.";
        }

        if ($this->container['label_results'] === null) {
            $invalidProperties[] = "'label_results' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets response
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseResponse
     */
    public function getResponse()
    {
        return $this->container['response'];
    }

    /**
     * Sets response
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseResponse $response response
     *
     * @return self
     */
    public function setResponse($response)
    {
        if (is_null($response)) {
            throw new \InvalidArgumentException('non-nullable response cannot be null');
        }
        $this->container['response'] = $response;

        return $this;
    }

    /**
     * Gets shipment_identification_number
     *
     * @return string|null
     */
    public function getShipmentIdentificationNumber()
    {
        return $this->container['shipment_identification_number'];
    }

    /**
     * Sets shipment_identification_number
     *
     * @param string|null $shipment_identification_number Tracking number of the leading package in the shipment
     *
     * @return self
     */
    public function setShipmentIdentificationNumber($shipment_identification_number)
    {
        if (is_null($shipment_identification_number)) {
            throw new \InvalidArgumentException('non-nullable shipment_identification_number cannot be null');
        }
        if ((mb_strlen($shipment_identification_number) > 18)) {
            throw new \InvalidArgumentException('invalid length for $shipment_identification_number when calling LabelRecoveryResponse., must be smaller than or equal to 18.');
        }
        if ((mb_strlen($shipment_identification_number) < 18)) {
            throw new \InvalidArgumentException('invalid length for $shipment_identification_number when calling LabelRecoveryResponse., must be bigger than or equal to 18.');
        }

        $this->container['shipment_identification_number'] = $shipment_identification_number;

        return $this;
    }

    /**
     * Gets label_results
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseLabelResults1
     */
    public function getLabelResults()
    {
        return $this->container['label_results'];
    }

    /**
     * Sets label_results
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseLabelResults1 $label_results label_results
     *
     * @return self
     */
    public function setLabelResults($label_results)
    {
        if (is_null($label_results)) {
            throw new \InvalidArgumentException('non-nullable label_results cannot be null');
        }
        $this->container['label_results'] = $label_results;

        return $this;
    }

    /**
     * Gets cod_turn_in_page
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseCODTurnInPage|null
     */
    public function getCodTurnInPage()
    {
        return $this->container['cod_turn_in_page'];
    }

    /**
     * Sets cod_turn_in_page
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseCODTurnInPage|null $cod_turn_in_page cod_turn_in_page
     *
     * @return self
     */
    public function setCodTurnInPage($cod_turn_in_page)
    {
        if (is_null($cod_turn_in_page)) {
            throw new \InvalidArgumentException('non-nullable cod_turn_in_page cannot be null');
        }
        $this->container['cod_turn_in_page'] = $cod_turn_in_page;

        return $this;
    }

    /**
     * Gets form
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseForm|null
     */
    public function getForm()
    {
        return $this->container['form'];
    }

    /**
     * Sets form
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseForm|null $form form
     *
     * @return self
     */
    public function setForm($form)
    {
        if (is_null($form)) {
            throw new \InvalidArgumentException('non-nullable form cannot be null');
        }
        $this->container['form'] = $form;

        return $this;
    }

    /**
     * Gets high_value_report
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseHighValueReport|null
     */
    public function getHighValueReport()
    {
        return $this->container['high_value_report'];
    }

    /**
     * Sets high_value_report
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseHighValueReport|null $high_value_report high_value_report
     *
     * @return self
     */
    public function setHighValueReport($high_value_report)
    {
        if (is_null($high_value_report)) {
            throw new \InvalidArgumentException('non-nullable high_value_report cannot be null');
        }
        $this->container['high_value_report'] = $high_value_report;

        return $this;
    }

    /**
     * Gets tracking_candidate
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseTrackingCandidate1|null
     */
    public function getTrackingCandidate()
    {
        return $this->container['tracking_candidate'];
    }

    /**
     * Sets tracking_candidate
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\Model\LabelRecoveryResponseTrackingCandidate1|null $tracking_candidate tracking_candidate
     *
     * @return self
     */
    public function setTrackingCandidate($tracking_candidate)
    {
        if (is_null($tracking_candidate)) {
            throw new \InvalidArgumentException('non-nullable tracking_candidate cannot be null');
        }
        $this->container['tracking_candidate'] = $tracking_candidate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


