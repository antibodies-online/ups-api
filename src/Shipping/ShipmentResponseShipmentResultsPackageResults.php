<?php
/**
 * ShipmentResponseShipmentResultsPackageResults
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  AntibodiesOnline\UpsApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ship
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace AntibodiesOnline\UpsApi\Shipping;

use \ArrayAccess;
use \AntibodiesOnline\UpsApi\ObjectSerializer;

/**
 * ShipmentResponseShipmentResultsPackageResults Class Doc Comment
 *
 * @category Class
 * @package  AntibodiesOnline\UpsApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ShipmentResponseShipmentResultsPackageResults implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShipmentResponse_ShipmentResults_PackageResults';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'tracking_number' => 'string',
        'rate_modifier' => '\AntibodiesOnline\UpsApi\Shipping\PackageResultsRateModifier',
        'base_service_charge' => '\AntibodiesOnline\UpsApi\Shipping\PackageResultsBaseServiceCharge',
        'service_options_charges' => '\AntibodiesOnline\UpsApi\Shipping\PackageResultsServiceOptionsCharges',
        'shipping_label' => '\AntibodiesOnline\UpsApi\Shipping\PackageResultsShippingLabel',
        'shipping_receipt' => '\AntibodiesOnline\UpsApi\Shipping\PackageResultsShippingReceipt',
        'uspspic_number' => 'string',
        'cn22_number' => 'string',
        'accessorial' => '\AntibodiesOnline\UpsApi\Shipping\ShipmentResultsPackageResultsAccessorial',
        'simple_rate' => '\AntibodiesOnline\UpsApi\Shipping\PackageResultsSimpleRate',
        'form' => '\AntibodiesOnline\UpsApi\Shipping\PackageResultsForm',
        'itemized_charges' => '\AntibodiesOnline\UpsApi\Shipping\ShipmentResultsPackageResultsItemizedCharges',
        'negotiated_charges' => '\AntibodiesOnline\UpsApi\Shipping\PackageResultsNegotiatedCharges'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'tracking_number' => null,
        'rate_modifier' => null,
        'base_service_charge' => null,
        'service_options_charges' => null,
        'shipping_label' => null,
        'shipping_receipt' => null,
        'uspspic_number' => null,
        'cn22_number' => null,
        'accessorial' => null,
        'simple_rate' => null,
        'form' => null,
        'itemized_charges' => null,
        'negotiated_charges' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'tracking_number' => false,
		'rate_modifier' => false,
		'base_service_charge' => false,
		'service_options_charges' => false,
		'shipping_label' => false,
		'shipping_receipt' => false,
		'uspspic_number' => false,
		'cn22_number' => false,
		'accessorial' => false,
		'simple_rate' => false,
		'form' => false,
		'itemized_charges' => false,
		'negotiated_charges' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tracking_number' => 'TrackingNumber',
        'rate_modifier' => 'RateModifier',
        'base_service_charge' => 'BaseServiceCharge',
        'service_options_charges' => 'ServiceOptionsCharges',
        'shipping_label' => 'ShippingLabel',
        'shipping_receipt' => 'ShippingReceipt',
        'uspspic_number' => 'USPSPICNumber',
        'cn22_number' => 'CN22Number',
        'accessorial' => 'Accessorial',
        'simple_rate' => 'SimpleRate',
        'form' => 'Form',
        'itemized_charges' => 'ItemizedCharges',
        'negotiated_charges' => 'NegotiatedCharges'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tracking_number' => 'setTrackingNumber',
        'rate_modifier' => 'setRateModifier',
        'base_service_charge' => 'setBaseServiceCharge',
        'service_options_charges' => 'setServiceOptionsCharges',
        'shipping_label' => 'setShippingLabel',
        'shipping_receipt' => 'setShippingReceipt',
        'uspspic_number' => 'setUspspicNumber',
        'cn22_number' => 'setCn22Number',
        'accessorial' => 'setAccessorial',
        'simple_rate' => 'setSimpleRate',
        'form' => 'setForm',
        'itemized_charges' => 'setItemizedCharges',
        'negotiated_charges' => 'setNegotiatedCharges'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tracking_number' => 'getTrackingNumber',
        'rate_modifier' => 'getRateModifier',
        'base_service_charge' => 'getBaseServiceCharge',
        'service_options_charges' => 'getServiceOptionsCharges',
        'shipping_label' => 'getShippingLabel',
        'shipping_receipt' => 'getShippingReceipt',
        'uspspic_number' => 'getUspspicNumber',
        'cn22_number' => 'getCn22Number',
        'accessorial' => 'getAccessorial',
        'simple_rate' => 'getSimpleRate',
        'form' => 'getForm',
        'itemized_charges' => 'getItemizedCharges',
        'negotiated_charges' => 'getNegotiatedCharges'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('tracking_number', $data ?? [], null);
        $this->setIfExists('rate_modifier', $data ?? [], null);
        $this->setIfExists('base_service_charge', $data ?? [], null);
        $this->setIfExists('service_options_charges', $data ?? [], null);
        $this->setIfExists('shipping_label', $data ?? [], null);
        $this->setIfExists('shipping_receipt', $data ?? [], null);
        $this->setIfExists('uspspic_number', $data ?? [], null);
        $this->setIfExists('cn22_number', $data ?? [], null);
        $this->setIfExists('accessorial', $data ?? [], null);
        $this->setIfExists('simple_rate', $data ?? [], null);
        $this->setIfExists('form', $data ?? [], null);
        $this->setIfExists('itemized_charges', $data ?? [], null);
        $this->setIfExists('negotiated_charges', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['tracking_number'] === null) {
            $invalidProperties[] = "'tracking_number' can't be null";
        }
        if ((mb_strlen($this->container['tracking_number']) > 18)) {
            $invalidProperties[] = "invalid value for 'tracking_number', the character length must be smaller than or equal to 18.";
        }

        if ((mb_strlen($this->container['tracking_number']) < 18)) {
            $invalidProperties[] = "invalid value for 'tracking_number', the character length must be bigger than or equal to 18.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tracking_number
     *
     * @return string
     */
    public function getTrackingNumber()
    {
        return $this->container['tracking_number'];
    }

    /**
     * Sets tracking_number
     *
     * @param string $tracking_number Package 1Z number.   For Mail Innovations shipments, please use the USPSPICNumber when tracking packages (a non-1Z number Mail Manifest Id is returned).  Applicable only for ShipmentResponse and ShipAcceptResponse.
     *
     * @return self
     */
    public function setTrackingNumber($tracking_number)
    {
        if (is_null($tracking_number)) {
            throw new \InvalidArgumentException('non-nullable tracking_number cannot be null');
        }
        if ((mb_strlen($tracking_number) > 18)) {
            throw new \InvalidArgumentException('invalid length for $tracking_number when calling ShipmentResponseShipmentResultsPackageResults., must be smaller than or equal to 18.');
        }
        if ((mb_strlen($tracking_number) < 18)) {
            throw new \InvalidArgumentException('invalid length for $tracking_number when calling ShipmentResponseShipmentResultsPackageResults., must be bigger than or equal to 18.');
        }

        $this->container['tracking_number'] = $tracking_number;

        return $this;
    }

    /**
     * Gets rate_modifier
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\PackageResultsRateModifier|null
     */
    public function getRateModifier()
    {
        return $this->container['rate_modifier'];
    }

    /**
     * Sets rate_modifier
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\PackageResultsRateModifier|null $rate_modifier rate_modifier
     *
     * @return self
     */
    public function setRateModifier($rate_modifier)
    {
        if (is_null($rate_modifier)) {
            throw new \InvalidArgumentException('non-nullable rate_modifier cannot be null');
        }
        $this->container['rate_modifier'] = $rate_modifier;

        return $this;
    }

    /**
     * Gets base_service_charge
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\PackageResultsBaseServiceCharge|null
     */
    public function getBaseServiceCharge()
    {
        return $this->container['base_service_charge'];
    }

    /**
     * Sets base_service_charge
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\PackageResultsBaseServiceCharge|null $base_service_charge base_service_charge
     *
     * @return self
     */
    public function setBaseServiceCharge($base_service_charge)
    {
        if (is_null($base_service_charge)) {
            throw new \InvalidArgumentException('non-nullable base_service_charge cannot be null');
        }
        $this->container['base_service_charge'] = $base_service_charge;

        return $this;
    }

    /**
     * Gets service_options_charges
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\PackageResultsServiceOptionsCharges|null
     */
    public function getServiceOptionsCharges()
    {
        return $this->container['service_options_charges'];
    }

    /**
     * Sets service_options_charges
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\PackageResultsServiceOptionsCharges|null $service_options_charges service_options_charges
     *
     * @return self
     */
    public function setServiceOptionsCharges($service_options_charges)
    {
        if (is_null($service_options_charges)) {
            throw new \InvalidArgumentException('non-nullable service_options_charges cannot be null');
        }
        $this->container['service_options_charges'] = $service_options_charges;

        return $this;
    }

    /**
     * Gets shipping_label
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\PackageResultsShippingLabel|null
     */
    public function getShippingLabel()
    {
        return $this->container['shipping_label'];
    }

    /**
     * Sets shipping_label
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\PackageResultsShippingLabel|null $shipping_label shipping_label
     *
     * @return self
     */
    public function setShippingLabel($shipping_label)
    {
        if (is_null($shipping_label)) {
            throw new \InvalidArgumentException('non-nullable shipping_label cannot be null');
        }
        $this->container['shipping_label'] = $shipping_label;

        return $this;
    }

    /**
     * Gets shipping_receipt
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\PackageResultsShippingReceipt|null
     */
    public function getShippingReceipt()
    {
        return $this->container['shipping_receipt'];
    }

    /**
     * Sets shipping_receipt
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\PackageResultsShippingReceipt|null $shipping_receipt shipping_receipt
     *
     * @return self
     */
    public function setShippingReceipt($shipping_receipt)
    {
        if (is_null($shipping_receipt)) {
            throw new \InvalidArgumentException('non-nullable shipping_receipt cannot be null');
        }
        $this->container['shipping_receipt'] = $shipping_receipt;

        return $this;
    }

    /**
     * Gets uspspic_number
     *
     * @return string|null
     */
    public function getUspspicNumber()
    {
        return $this->container['uspspic_number'];
    }

    /**
     * Sets uspspic_number
     *
     * @param string|null $uspspic_number USPSPICNumber is USPS Package Identification; it should be used for tracking Mail Innovations shipments.
     *
     * @return self
     */
    public function setUspspicNumber($uspspic_number)
    {
        if (is_null($uspspic_number)) {
            throw new \InvalidArgumentException('non-nullable uspspic_number cannot be null');
        }


        $this->container['uspspic_number'] = $uspspic_number;

        return $this;
    }

    /**
     * Gets cn22_number
     *
     * @return string|null
     */
    public function getCn22Number()
    {
        return $this->container['cn22_number'];
    }

    /**
     * Sets cn22_number
     *
     * @param string|null $cn22_number USPS defined CN22 ID number format varies based on destination country or territory.  Not applicable as of Jan 2015.  Mail Innovations shipments US to VI, PR, and GU are not considered international.
     *
     * @return self
     */
    public function setCn22Number($cn22_number)
    {
        if (is_null($cn22_number)) {
            throw new \InvalidArgumentException('non-nullable cn22_number cannot be null');
        }


        $this->container['cn22_number'] = $cn22_number;

        return $this;
    }

    /**
     * Gets accessorial
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\ShipmentResultsPackageResultsAccessorial|null
     */
    public function getAccessorial()
    {
        return $this->container['accessorial'];
    }

    /**
     * Sets accessorial
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\ShipmentResultsPackageResultsAccessorial|null $accessorial accessorial
     *
     * @return self
     */
    public function setAccessorial($accessorial)
    {
        if (is_null($accessorial)) {
            throw new \InvalidArgumentException('non-nullable accessorial cannot be null');
        }
        $this->container['accessorial'] = $accessorial;

        return $this;
    }

    /**
     * Gets simple_rate
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\PackageResultsSimpleRate|null
     */
    public function getSimpleRate()
    {
        return $this->container['simple_rate'];
    }

    /**
     * Sets simple_rate
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\PackageResultsSimpleRate|null $simple_rate simple_rate
     *
     * @return self
     */
    public function setSimpleRate($simple_rate)
    {
        if (is_null($simple_rate)) {
            throw new \InvalidArgumentException('non-nullable simple_rate cannot be null');
        }
        $this->container['simple_rate'] = $simple_rate;

        return $this;
    }

    /**
     * Gets form
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\PackageResultsForm|null
     */
    public function getForm()
    {
        return $this->container['form'];
    }

    /**
     * Sets form
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\PackageResultsForm|null $form form
     *
     * @return self
     */
    public function setForm($form)
    {
        if (is_null($form)) {
            throw new \InvalidArgumentException('non-nullable form cannot be null');
        }
        $this->container['form'] = $form;

        return $this;
    }

    /**
     * Gets itemized_charges
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\ShipmentResultsPackageResultsItemizedCharges|null
     */
    public function getItemizedCharges()
    {
        return $this->container['itemized_charges'];
    }

    /**
     * Sets itemized_charges
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\ShipmentResultsPackageResultsItemizedCharges|null $itemized_charges itemized_charges
     *
     * @return self
     */
    public function setItemizedCharges($itemized_charges)
    {
        if (is_null($itemized_charges)) {
            throw new \InvalidArgumentException('non-nullable itemized_charges cannot be null');
        }
        $this->container['itemized_charges'] = $itemized_charges;

        return $this;
    }

    /**
     * Gets negotiated_charges
     *
     * @return \AntibodiesOnline\UpsApi\Shipping\PackageResultsNegotiatedCharges|null
     */
    public function getNegotiatedCharges()
    {
        return $this->container['negotiated_charges'];
    }

    /**
     * Sets negotiated_charges
     *
     * @param \AntibodiesOnline\UpsApi\Shipping\PackageResultsNegotiatedCharges|null $negotiated_charges negotiated_charges
     *
     * @return self
     */
    public function setNegotiatedCharges($negotiated_charges)
    {
        if (is_null($negotiated_charges)) {
            throw new \InvalidArgumentException('non-nullable negotiated_charges cannot be null');
        }
        $this->container['negotiated_charges'] = $negotiated_charges;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


