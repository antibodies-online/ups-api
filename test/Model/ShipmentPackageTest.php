<?php
/**
 * ShipmentPackageTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  AntibodiesOnline\UpsApi\Rating
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Rate
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace AntibodiesOnline\UpsApi\Rating\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ShipmentPackageTest Class Doc Comment
 *
 * @category    Class
 * @description Package Container.  Only one Package allowed for Simple Rate
 * @package     AntibodiesOnline\UpsApi\Rating
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ShipmentPackageTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ShipmentPackage"
     */
    public function testShipmentPackage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packaging_type"
     */
    public function testPropertyPackagingType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dimensions"
     */
    public function testPropertyDimensions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dim_weight"
     */
    public function testPropertyDimWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "package_weight"
     */
    public function testPropertyPackageWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "commodity"
     */
    public function testPropertyCommodity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "large_package_indicator"
     */
    public function testPropertyLargePackageIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "package_service_options"
     */
    public function testPropertyPackageServiceOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_handling_indicator"
     */
    public function testPropertyAdditionalHandlingIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "simple_rate"
     */
    public function testPropertySimpleRate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ups_premier"
     */
    public function testPropertyUpsPremier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oversize_indicator"
     */
    public function testPropertyOversizeIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_billable_weight_indicator"
     */
    public function testPropertyMinimumBillableWeightIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
