<?php
/**
 * HazMatHazMatChemicalRecordTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  AntibodiesOnline\UpsApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Rate
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace AntibodiesOnline\UpsApi\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * HazMatHazMatChemicalRecordTest Class Doc Comment
 *
 * @category    Class
 * @description Container to hold HazMat Chemical Records.
 * @package     AntibodiesOnline\UpsApi
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class HazMatHazMatChemicalRecordTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "HazMatHazMatChemicalRecord"
     */
    public function testHazMatHazMatChemicalRecord()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "chemical_record_identifier"
     */
    public function testPropertyChemicalRecordIdentifier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "class_division_number"
     */
    public function testPropertyClassDivisionNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id_number"
     */
    public function testPropertyIdNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transportation_mode"
     */
    public function testPropertyTransportationMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "regulation_set"
     */
    public function testPropertyRegulationSet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "emergency_phone"
     */
    public function testPropertyEmergencyPhone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "emergency_contact"
     */
    public function testPropertyEmergencyContact()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reportable_quantity"
     */
    public function testPropertyReportableQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sub_risk_class"
     */
    public function testPropertySubRiskClass()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packaging_group_type"
     */
    public function testPropertyPackagingGroupType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quantity"
     */
    public function testPropertyQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uom"
     */
    public function testPropertyUom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packaging_instruction_code"
     */
    public function testPropertyPackagingInstructionCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "proper_shipping_name"
     */
    public function testPropertyProperShippingName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "technical_name"
     */
    public function testPropertyTechnicalName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_description"
     */
    public function testPropertyAdditionalDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packaging_type"
     */
    public function testPropertyPackagingType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hazard_label_required"
     */
    public function testPropertyHazardLabelRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packaging_type_quantity"
     */
    public function testPropertyPackagingTypeQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "commodity_regulated_level_code"
     */
    public function testPropertyCommodityRegulatedLevelCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transport_category"
     */
    public function testPropertyTransportCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tunnel_restriction_code"
     */
    public function testPropertyTunnelRestrictionCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
