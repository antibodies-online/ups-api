<?php
/**
 * ShipmentResponseShipmentResultsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  AntibodiesOnline\UpsApi\Shipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ship
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace AntibodiesOnline\UpsApi\Shipping\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ShipmentResponseShipmentResultsTest Class Doc Comment
 *
 * @category    Class
 * @description Shipment Results container.
 * @package     AntibodiesOnline\UpsApi\Shipping
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ShipmentResponseShipmentResultsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ShipmentResponseShipmentResults"
     */
    public function testShipmentResponseShipmentResults()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disclaimer"
     */
    public function testPropertyDisclaimer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipment_charges"
     */
    public function testPropertyShipmentCharges()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "negotiated_rate_charges"
     */
    public function testPropertyNegotiatedRateCharges()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "frs_shipment_data"
     */
    public function testPropertyFrsShipmentData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rating_method"
     */
    public function testPropertyRatingMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billable_weight_calculation_method"
     */
    public function testPropertyBillableWeightCalculationMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_weight"
     */
    public function testPropertyBillingWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipment_identification_number"
     */
    public function testPropertyShipmentIdentificationNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mi_dual_return_shipment_key"
     */
    public function testPropertyMiDualReturnShipmentKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bar_code_image"
     */
    public function testPropertyBarCodeImage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "package_results"
     */
    public function testPropertyPackageResults()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "control_log_receipt"
     */
    public function testPropertyControlLogReceipt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "form"
     */
    public function testPropertyForm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cod_turn_in_page"
     */
    public function testPropertyCodTurnInPage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "high_value_report"
     */
    public function testPropertyHighValueReport()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "label_url"
     */
    public function testPropertyLabelUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_language_label_url"
     */
    public function testPropertyLocalLanguageLabelUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "receipt_url"
     */
    public function testPropertyReceiptUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_language_receipt_url"
     */
    public function testPropertyLocalLanguageReceiptUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dg_paper_image"
     */
    public function testPropertyDgPaperImage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "master_carton_id"
     */
    public function testPropertyMasterCartonId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "roar_rated_indicator"
     */
    public function testPropertyRoarRatedIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
